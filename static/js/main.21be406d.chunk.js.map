{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","services/INITIAL_STATE.js","redux/store.js","components/LabelInput/LabelInput.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","helpers/toastrSetting.js","index.js","components/ContactList/ContactItem.module.scss","components/LabelInput/LabelInput.module.scss","components/App/App.module.scss"],"names":["module","exports","createContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","items","createReducer","contactsActions","state","filter","combineReducers","store","configureStore","reducer","contacts","contactsReducer","LabelInput","stateData","title","onGetInputData","className","s","labelFind","inputFind","type","value","onChange","e","target","ContactForm","getInputData","setState","addContact","preventDefault","props","contactsItems","find","el","toLowerCase","notification","onAddContact","contactForm","onSubmit","this","wrapper","btnForm","Component","mapDispatchToProps","connect","onFilter","valueFilter","isShowFilter","length","ownProps","item","dispatch","onRemoveContact","idx","contactItem","dataBlock","sequentialÐ¢umber","phoneNumber","removeBtn","onClick","normalizedFilter","visibleContacts","includes","isShowContacts","map","key","phonebook","noContacts","toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.21be406d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__hBo6V\",\"wrapper\":\"ContactForm_wrapper__1fVqC\",\"btnForm\":\"ContactForm_btnForm__1xFh9\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\n// const CREATE_CONTACT = 'contacts/createContact';\n// const REMOVE_CONTACT = 'contacts/removeContact';\n// const CHANGE_FILTER = 'contacts/changeFilter';\n\n// import actionTypes from './contactsActionsTypes';\n\nconst createContact = createAction(\n  'contacts/createContact',\n  (name, number) => ({\n    payload: {\n      contact: { id: uuidv4(), name, number },\n    },\n  }),\n);\nconst removeContact = createAction('contacts/removeContact');\nconst changeFilter = createAction('contacts/changeFilter');\n\n// const createContact = (name, number) => ({\n//   type: actionTypes.CREATE_CONTACT,\n//   payload: { contact: { id: uuidv4(), name, number } },\n// });\n\n// const removeContact = contactId => ({\n//   type: actionTypes.REMOVE_CONTACT,\n//   payload: { contactId },\n// });\n\n// const changeFilter = filter => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: { filter },\n// });\n\n// const getVisibleContacts = () => ({\n//   //\n// });\n\nexport default {\n  createContact,\n  removeContact,\n  changeFilter,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport INITIAL_STATE from '../../services/INITIAL_STATE';\nimport contactsActions from './contactsActions';\n\nconst onCreateReducer = (state, { payload }) => [...state, payload.contact];\nconst onRemoveContact = (state, { payload }) =>\n  state.filter(contact => contact.id !== payload);\n\nconst items = createReducer(INITIAL_STATE, {\n  [contactsActions.createContact]: onCreateReducer,\n  [contactsActions.removeContact]: onRemoveContact,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","export default [\n  {\n    id: '0e1211b7-aef7-480e-bc14-f532a1e4c9af',\n    name: 'Alex',\n    number: '0662025390',\n  },\n  {\n    id: 'e7f6bcff-a54e-4e09-ac49-b05647dca4a6',\n    name: 'Maks',\n    number: '0662025390',\n  },\n  {\n    id: '59a438bf-edd0-4d3d-a6c5-c3b755e4d37c',\n    name: 'Den',\n    number: '0662025390',\n  },\n];\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactsReducer from './contacts/contactsReducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\n\nimport s from './LabelInput.module.scss';\n\nconst LabelInput = ({ stateData, title, name, onGetInputData }) => {\n  return (\n    <label className={s.labelFind}>\n      <span>{title}</span>\n      <input\n        className={s.inputFind}\n        type=\"text\"\n        name={name}\n        value={stateData[name]}\n        onChange={e => {\n          onGetInputData(e.target.name, e.target.value);\n        }}\n      />\n    </label>\n  );\n};\n\nexport default LabelInput;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport notification from 'toastr';\r\n\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport LabelInput from '../LabelInput/LabelInput';\r\n\r\nimport s from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  getInputData = (name, value) => this.setState({ [name]: value });\r\n\r\n  addContact = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (name && number) {\r\n      const isContact = this.props.contactsItems.find(el => {\r\n        if (el.name.toLowerCase() === name.toLowerCase()) {\r\n          notification['info'](\r\n            'A contact with the same Name already exists',\r\n            'Info',\r\n          );\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (!isContact) {\r\n        this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n        this.setState({ name: '', number: '' });\r\n      }\r\n    } else {\r\n      notification['error']('You did not enter a Name or Number', 'Error');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.addContact}>\r\n        <div className={s.wrapper}>\r\n          <LabelInput\r\n            title=\"Name\"\r\n            name=\"name\"\r\n            stateData={this.state}\r\n            onGetInputData={this.getInputData}\r\n          />\r\n          <LabelInput\r\n            title=\"Number\"\r\n            name=\"number\"\r\n            stateData={this.state}\r\n            onGetInputData={this.getInputData}\r\n          />\r\n        </div>\r\n\r\n        <button className={s.btnForm} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contactsItems: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.createContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport s from '../LabelInput/LabelInput.module.scss';\n\nconst Filter = ({ valueFilter, onFilter, contacts }) => {\n  const isShowFilter = contacts.length > 2;\n  return (\n    <>\n      {isShowFilter && (\n        <label className={s.labelFind}>\n          <span>Enter contact name</span>\n          <input\n            className={s.inputFind}\n            type=\"text\"\n            name=\"filter\"\n            value={valueFilter}\n            onChange={({ target }) => onFilter(target.value)}\n          />\n        </label>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  valueFilter: state.contacts.filter,\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  onFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport s from './ContactItem.module.scss';\n\nconst ContactItem = ({ name, number, id, idx, onRemoveContact }) => {\n  return (\n    <li className={s.contactItem}>\n      <div className={s.dataBlock}>\n        <span className={s.sequentialÐ¢umber}>{idx + 1}</span>\n        <span className={s.name}>{name}</span>\n        <span className={s.phoneNumber}>{number}</span>\n      </div>\n\n      <button\n        className={s.removeBtn}\n        type=\"button\"\n        onClick={() => onRemoveContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const contact = state.contacts.items.find(item => item.id === ownProps.id);\n\n  return { ...contact };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemoveContact: () => dispatch(contactsActions.removeContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ visibleContacts, onRemoveContact }) => {\n  const isShowContacts = visibleContacts.length > 0;\n\n  return (\n    <>\n      {isShowContacts && (\n        <ul className=\"ContactList\">\n          {visibleContacts.map(({ id }, idx) => {\n            return (\n              <ContactItem\n                key={id}\n                id={id}\n                idx={idx}\n                // onRemoveContact={onRemoveContact}\n                // {...otherProps}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return { visibleContacts: filteredContacts };\n};\n\n// const mapDispatchToProps = {\n//   onRemoveContact: contactsActions.removeContact,\n// };\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n\nimport s from './App.module.scss';\n\nconst App = ({ contactsItems }) => {\n  const isShowContacts = contactsItems.length > 0;\n\n  return (\n    <section className={s.phonebook}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n\n      <h2 className={s.title}>Contacts</h2>\n      <ContactList />\n      {!isShowContacts && <p className={s.noContacts}>No contacts</p>}\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import toastr from 'toastr';\n\nexport const notification = (toastr.options = {\n  closeButton: true,\n  debug: false,\n  newestOnTop: false,\n  progressBar: true,\n  positionClass: 'toast-top-right',\n  preventDuplicates: true,\n  onclick: null,\n  showDuration: '300',\n  hideDuration: '1000',\n  timeOut: '1200',\n  extendedTimeOut: '1000',\n  showEasing: 'swing',\n  hideEasing: 'linear',\n  showMethod: 'fadeIn',\n  hideMethod: 'fadeOut',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './components/App/App';\nimport './helpers/toastrSetting';\n\nimport 'modern-normalize/modern-normalize.css';\nimport 'toastr/build/toastr.css';\nimport './main.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__34B9B\",\"dataBlock\":\"ContactItem_dataBlock__35IPm\",\"sequentialÐ¢umber\":\"ContactItem_sequentialÐ¢umber__1q_ON\",\"name\":\"ContactItem_name__2e1xH\",\"removeBtn\":\"ContactItem_removeBtn__1E-h-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelForm\":\"LabelInput_labelForm__2F2gG\",\"labelFind\":\"LabelInput_labelFind__1kk84\",\"inputForm\":\"LabelInput_inputForm__lBYJz\",\"inputFind\":\"LabelInput_inputFind__3G_JX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__1SucT\",\"title\":\"App_title__1dlVG\",\"noContacts\":\"App_noContacts__3gYnN\"};"],"sourceRoot":""}